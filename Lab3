;	Task 3.1
;	Описать функцию вычисления факториала. Рассмотреть варианты решения задачи с 
;	применением локальных определений LAMBDA и LET.

(defun factorial (n)
	(let ((end 0))
		(if (= n end) 1
			( (lambda (x y)(* x y))  
               n (factorial (1- n)) ) 
		) 
    )
)

(print (factorial 5))

;	Task 3.2
;	Разработать программу символьного дифференцирования в соответствии с правилами, 
;	изложенными в [3], стр. 194-196. Рассмотреть варианты решения задачи с применением 
;	локальных определений LAMBDA и LET. 

(defun derivative (expression x)
    (cond 
		((numberp expression) 0)
        ((equal expression x) 1)
        ((symbolp expression) 0)
        (t 
			(let(
					(op (first expression)) 
					(u (second expression)) 
					(v (third expression)) 
				)
				(cond 
					((equal op '+) (list '+ (derivative u x) (derivative v x)))
					((equal op '-) (list '- (derivative u x) (derivative v x)))
					((equal op '* ) (list '+ (list '* u (derivative v x)) (list '* v (derivative u x))))
					((equal op '/) (derivative (list '* u (list '^ v -1)) x) )
					((equal op '^) (list  '* v (list '^ x (- v 1) )))
				)
			)
		)
	)
)

(print(derivative '(* x 3) 'x))

;	Task 3.3
;	Решить задачу из лабораторной работы №2 с применением локальных определений LAMBDA и LET.

;   Есть список lst и два произвольных лисповских объекта obj1 и obj2. Описать
;   функцию, которая формирует новый список путем замены в списке lst всех
;   вхождений объекта obj1 объектом obj2.



;	Task 3.4
;	Реализовать программу - простейший интерпретатор лисповских программ . На вход 
;	интерпретатора подается текст,  который может быть интерпретирован как вызов или 
;	суперпозиция функций Лиспа, пример (для GCLisp'а) : '(cons(car(cdr '(e r t w))) (cons (cdr '(g h 6)) nil)). 
;	Программа должна обеспечивать выполнение такого рода примеров. 
;	Требования к программе :   
;	−  Должна обеспечивать интерпретацию базовых функций Лиспа и арифметических 
;	операций +, -, /, *;  
;	−  В программе должны использоваться локальные определения; 
;	−  Не допускается использование встроенной функции-интерпретатора EVAL; 



;	Task 3.5
;	Дополнить интерпретатор из задания 4 в соответствии с вариантом индивидуального задания.

;   Функция вычисления корня n-й степени из числа x.

 

;	Task 3.6
;	Написать программу обработки текста естественного языка с использованием отображающих функционалов в соответствии с заданием из таблицы. 
;	Текст рекомендуется представлять списком списков : каждое предложение - список слов, весь текст - список предложений.

;   Дан текст. Сделать заглавной каждую букву каждого слова, начинающегося с
;   заглавной буквы.



;	Task 3.7
;	Дана фраза украинского (русского) языка. Написать программу, которая разбивает каждое слово фразы на слоги.



;	Task 3.8
;	"Язык сплетника". 
;	Есть ключевое слово, например, "сплетня". Слово переводится на язык сплетника путем отделения первого слога в переводимом и ключевом слове 
;	(например, сло-во и спле-тня) с последующей перестановкой по определенным правилам : „(слово сплетня) преобразуется в „(сплево слотня). 
;	Каждое слово преобразуется в пару слов. Первое слово есть конкатенация первого слога ключевого слова и части переводимого слова, оставшейся 
;	после отделения от него первого слога. Второе слово есть конкатенация первого слога переводимого слова и части ключевого слова, оставшейся 
;	после отделения от него первого слога.
;   Написать программу перевода предложения украинского языка на заданный таким образом “тайный” язык.



;	Task 3.9
;   Написать программу в соответствии с заданием.

;   Написать программу, которая заменяет слова исходного текста номерами их
;   семантических эквивалентов по словарю в зависимости от значения
;   трехбуквенного концы слова (см. [2]). Если слово содержит менее трех букв,
;   то замену не производить.
